/*
* generated by Xtext
*/
grammar InternalSplittingDescription;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.uni_marburg.splittr.description.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.uni_marburg.splittr.description.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uni_marburg.splittr.description.services.SplittingDescriptionGrammarAccess;

}

@parser::members {

 	private SplittingDescriptionGrammarAccess grammarAccess;
 	
    public InternalSplittingDescriptionParser(TokenStream input, SplittingDescriptionGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SplittingDescription";	
   	}
   	
   	@Override
   	protected SplittingDescriptionGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSplittingDescription
entryRuleSplittingDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSplittingDescriptionRule()); }
	 iv_ruleSplittingDescription=ruleSplittingDescription 
	 { $current=$iv_ruleSplittingDescription.current; } 
	 EOF 
;

// Rule SplittingDescription
ruleSplittingDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='split model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSplittingDescriptionAccess().getSplitModelKeyword_0());
    }
(
(
		lv_modelLocation_1_0=RULE_STRING
		{
			newLeafNode(lv_modelLocation_1_0, grammarAccess.getSplittingDescriptionAccess().getModelLocationSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"modelLocation",
        		lv_modelLocation_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='partially with threshold' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSplittingDescriptionAccess().getPartiallyWithThresholdKeyword_2_0());
    }
(
(
		lv_threshold_3_0=RULE_DOUBLE
		{
			newLeafNode(lv_threshold_3_0, grammarAccess.getSplittingDescriptionAccess().getThresholdDOUBLETerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"threshold",
        		lv_threshold_3_0, 
        		"DOUBLE");
	    }

)
))?	otherlv_4='into' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSplittingDescriptionAccess().getIntoKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSplittingDescriptionAccess().getSubmodelsSubModelParserRuleCall_4_0()); 
	    }
		lv_submodels_5_0=ruleSubModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSplittingDescriptionRule());
	        }
       		add(
       			$current, 
       			"submodels",
        		lv_submodels_5_0, 
        		"SubModel");
	        afterParserOrEnumRuleCall();
	    }

)
)*(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 0);
	 				}
					({true}?=>(	otherlv_7='fine-tune' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSplittingDescriptionAccess().getFineTuneKeyword_5_0_0());
    }
(	otherlv_8='weight of generalization' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSplittingDescriptionAccess().getWeightOfGeneralizationKeyword_5_0_1_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSplittingDescriptionAccess().getEqualsSignKeyword_5_0_1_1());
    }
(
(
		lv_weightGeneralization_10_0=RULE_DOUBLE
		{
			newLeafNode(lv_weightGeneralization_10_0, grammarAccess.getSplittingDescriptionAccess().getWeightGeneralizationDOUBLETerminalRuleCall_5_0_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weightGeneralization",
        		lv_weightGeneralization_10_0, 
        		"DOUBLE");
	    }

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 1);
	 				}
					({true}?=>(	otherlv_11='weight of aggregation' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSplittingDescriptionAccess().getWeightOfAggregationKeyword_5_1_0());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSplittingDescriptionAccess().getEqualsSignKeyword_5_1_1());
    }
(
(
		lv_weightAggregation_13_0=RULE_DOUBLE
		{
			newLeafNode(lv_weightAggregation_13_0, grammarAccess.getSplittingDescriptionAccess().getWeightAggregationDOUBLETerminalRuleCall_5_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weightAggregation",
        		lv_weightAggregation_13_0, 
        		"DOUBLE");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 2);
	 				}
					({true}?=>(	otherlv_14='weight of association' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSplittingDescriptionAccess().getWeightOfAssociationKeyword_5_2_0());
    }
	otherlv_15='=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSplittingDescriptionAccess().getEqualsSignKeyword_5_2_1());
    }
(
(
		lv_weightAssociation_16_0=RULE_DOUBLE
		{
			newLeafNode(lv_weightAssociation_16_0, grammarAccess.getSplittingDescriptionAccess().getWeightAssociationDOUBLETerminalRuleCall_5_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weightAssociation",
        		lv_weightAssociation_16_0, 
        		"DOUBLE");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 3);
	 				}
					({true}?=>(	otherlv_17='weight of containment' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSplittingDescriptionAccess().getWeightOfContainmentKeyword_5_3_0());
    }
	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSplittingDescriptionAccess().getEqualsSignKeyword_5_3_1());
    }
(
(
		lv_weightContainment_19_0=RULE_DOUBLE
		{
			newLeafNode(lv_weightContainment_19_0, grammarAccess.getSplittingDescriptionAccess().getWeightContainmentDOUBLETerminalRuleCall_5_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weightContainment",
        		lv_weightContainment_19_0, 
        		"DOUBLE");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 4);
	 				}
					({true}?=>(	otherlv_20='weight of interface realization' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSplittingDescriptionAccess().getWeightOfInterfaceRealizationKeyword_5_4_0());
    }
	otherlv_21='=' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSplittingDescriptionAccess().getEqualsSignKeyword_5_4_1());
    }
(
(
		lv_weightInterface_22_0=RULE_DOUBLE
		{
			newLeafNode(lv_weightInterface_22_0, grammarAccess.getSplittingDescriptionAccess().getWeightInterfaceDOUBLETerminalRuleCall_5_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weightInterface",
        		lv_weightInterface_22_0, 
        		"DOUBLE");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 5);
	 				}
					({true}?=>(	otherlv_23='weight of enum instantiation' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getSplittingDescriptionAccess().getWeightOfEnumInstantiationKeyword_5_5_0());
    }
	otherlv_24='=' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSplittingDescriptionAccess().getEqualsSignKeyword_5_5_1());
    }
(
(
		lv_weightEnum_25_0=RULE_DOUBLE
		{
			newLeafNode(lv_weightEnum_25_0, grammarAccess.getSplittingDescriptionAccess().getWeightEnumDOUBLETerminalRuleCall_5_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weightEnum",
        		lv_weightEnum_25_0, 
        		"DOUBLE");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), 6);
	 				}
					({true}?=>(	otherlv_26='alpha = ' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getSplittingDescriptionAccess().getAlphaKeyword_5_6_0());
    }
(
(
		lv_alpha_27_0=RULE_DOUBLE
		{
			newLeafNode(lv_alpha_27_0, grammarAccess.getSplittingDescriptionAccess().getAlphaDOUBLETerminalRuleCall_5_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSplittingDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alpha",
        		lv_alpha_27_0, 
        		"DOUBLE");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5());
	}

)?)
;





// Entry rule entryRuleSubModel
entryRuleSubModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubModelRule()); }
	 iv_ruleSubModel=ruleSubModel 
	 { $current=$iv_ruleSubModel.current; } 
	 EOF 
;

// Rule SubModel
ruleSubModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sub-model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubModelAccess().getSubModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubModelAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getSubModelAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubModelAccess().getRightCurlyBracketKeyword_4());
    }
)
;





RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


