/*
* generated by Xtext
*/
package de.uni_marburg.splittr.description.services;

import java.util.List;

import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

import com.google.inject.Inject;
import com.google.inject.Singleton;

@Singleton
public class SplittingDescriptionGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SplittingDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SplittingDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSplitModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cModelLocationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cModelLocationSTRINGTerminalRuleCall_1_0 = (RuleCall)cModelLocationAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPartiallyWithThresholdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cThresholdAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cThresholdDOUBLETerminalRuleCall_2_1_0 = (RuleCall)cThresholdAssignment_2_1.eContents().get(0);
		private final Keyword cIntoKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSubmodelsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSubmodelsSubModelParserRuleCall_4_0 = (RuleCall)cSubmodelsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cUnorderedGroup_5.eContents().get(0);
		private final Keyword cFineTuneKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Group cGroup_5_0_1 = (Group)cGroup_5_0.eContents().get(1);
		private final Keyword cWeightOfGeneralizationKeyword_5_0_1_0 = (Keyword)cGroup_5_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_0_1_1 = (Keyword)cGroup_5_0_1.eContents().get(1);
		private final Assignment cWeightGeneralizationAssignment_5_0_1_2 = (Assignment)cGroup_5_0_1.eContents().get(2);
		private final RuleCall cWeightGeneralizationDOUBLETerminalRuleCall_5_0_1_2_0 = (RuleCall)cWeightGeneralizationAssignment_5_0_1_2.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cUnorderedGroup_5.eContents().get(1);
		private final Keyword cWeightOfAggregationKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cWeightAggregationAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cWeightAggregationDOUBLETerminalRuleCall_5_1_2_0 = (RuleCall)cWeightAggregationAssignment_5_1_2.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cUnorderedGroup_5.eContents().get(2);
		private final Keyword cWeightOfAssociationKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_2_1 = (Keyword)cGroup_5_2.eContents().get(1);
		private final Assignment cWeightAssociationAssignment_5_2_2 = (Assignment)cGroup_5_2.eContents().get(2);
		private final RuleCall cWeightAssociationDOUBLETerminalRuleCall_5_2_2_0 = (RuleCall)cWeightAssociationAssignment_5_2_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cUnorderedGroup_5.eContents().get(3);
		private final Keyword cWeightOfContainmentKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_3_1 = (Keyword)cGroup_5_3.eContents().get(1);
		private final Assignment cWeightContainmentAssignment_5_3_2 = (Assignment)cGroup_5_3.eContents().get(2);
		private final RuleCall cWeightContainmentDOUBLETerminalRuleCall_5_3_2_0 = (RuleCall)cWeightContainmentAssignment_5_3_2.eContents().get(0);
		private final Group cGroup_5_4 = (Group)cUnorderedGroup_5.eContents().get(4);
		private final Keyword cWeightOfInterfaceRealizationKeyword_5_4_0 = (Keyword)cGroup_5_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_4_1 = (Keyword)cGroup_5_4.eContents().get(1);
		private final Assignment cWeightInterfaceAssignment_5_4_2 = (Assignment)cGroup_5_4.eContents().get(2);
		private final RuleCall cWeightInterfaceDOUBLETerminalRuleCall_5_4_2_0 = (RuleCall)cWeightInterfaceAssignment_5_4_2.eContents().get(0);
		private final Group cGroup_5_5 = (Group)cUnorderedGroup_5.eContents().get(5);
		private final Keyword cWeightOfEnumInstantiationKeyword_5_5_0 = (Keyword)cGroup_5_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_5_1 = (Keyword)cGroup_5_5.eContents().get(1);
		private final Assignment cWeightEnumAssignment_5_5_2 = (Assignment)cGroup_5_5.eContents().get(2);
		private final RuleCall cWeightEnumDOUBLETerminalRuleCall_5_5_2_0 = (RuleCall)cWeightEnumAssignment_5_5_2.eContents().get(0);
		private final Group cGroup_5_6 = (Group)cUnorderedGroup_5.eContents().get(6);
		private final Keyword cAlphaKeyword_5_6_0 = (Keyword)cGroup_5_6.eContents().get(0);
		private final Assignment cAlphaAssignment_5_6_1 = (Assignment)cGroup_5_6.eContents().get(1);
		private final RuleCall cAlphaDOUBLETerminalRuleCall_5_6_1_0 = (RuleCall)cAlphaAssignment_5_6_1.eContents().get(0);
		
		////	public double ANALYSIS_ALPHA = 0.86;
		////	
		////	public double WEIGHT_GENERALIZATION = 10.0;
		////	
		////	public double WEIGHT_COMPOSITION = 6.0;
		////
		////	public double WEIGHT_AGGREGATION = 3.0;
		////
		////	public double WEIGHT_ASSOCIATION = 1.0;
		////	
		////	public double WEIGHT_INTERFACE_REALIZATION = 3.0;
		//SplittingDescription:
		//	"split model" modelLocation=STRING ("partially with threshold" threshold=DOUBLE)? "into" submodels+=SubModel*
		//	("fine-tune" ("weight of generalization" "=" weightGeneralization=DOUBLE)? & ("weight of aggregation" "="
		//	weightAggregation=DOUBLE)? & ("weight of association" "=" weightAssociation=DOUBLE)? & ("weight of containment" "="
		//	weightContainment=DOUBLE)? & ("weight of interface realization" "=" weightInterface=DOUBLE)? &
		//	("weight of enum instantiation" "=" weightEnum=DOUBLE)? & ("alpha = " alpha=DOUBLE)?)?;
		public ParserRule getRule() { return rule; }

		//"split model" modelLocation=STRING ("partially with threshold" threshold=DOUBLE)? "into" submodels+=SubModel*
		//("fine-tune" ("weight of generalization" "=" weightGeneralization=DOUBLE)? & ("weight of aggregation" "="
		//weightAggregation=DOUBLE)? & ("weight of association" "=" weightAssociation=DOUBLE)? & ("weight of containment" "="
		//weightContainment=DOUBLE)? & ("weight of interface realization" "=" weightInterface=DOUBLE)? &
		//("weight of enum instantiation" "=" weightEnum=DOUBLE)? & ("alpha = " alpha=DOUBLE)?)?
		public Group getGroup() { return cGroup; }

		//"split model"
		public Keyword getSplitModelKeyword_0() { return cSplitModelKeyword_0; }

		//modelLocation=STRING
		public Assignment getModelLocationAssignment_1() { return cModelLocationAssignment_1; }

		//STRING
		public RuleCall getModelLocationSTRINGTerminalRuleCall_1_0() { return cModelLocationSTRINGTerminalRuleCall_1_0; }

		//("partially with threshold" threshold=DOUBLE)?
		public Group getGroup_2() { return cGroup_2; }

		//"partially with threshold"
		public Keyword getPartiallyWithThresholdKeyword_2_0() { return cPartiallyWithThresholdKeyword_2_0; }

		//threshold=DOUBLE
		public Assignment getThresholdAssignment_2_1() { return cThresholdAssignment_2_1; }

		//DOUBLE
		public RuleCall getThresholdDOUBLETerminalRuleCall_2_1_0() { return cThresholdDOUBLETerminalRuleCall_2_1_0; }

		//"into"
		public Keyword getIntoKeyword_3() { return cIntoKeyword_3; }

		//submodels+=SubModel*
		public Assignment getSubmodelsAssignment_4() { return cSubmodelsAssignment_4; }

		//SubModel
		public RuleCall getSubmodelsSubModelParserRuleCall_4_0() { return cSubmodelsSubModelParserRuleCall_4_0; }

		//("fine-tune" ("weight of generalization" "=" weightGeneralization=DOUBLE)? & ("weight of aggregation" "="
		//weightAggregation=DOUBLE)? & ("weight of association" "=" weightAssociation=DOUBLE)? & ("weight of containment" "="
		//weightContainment=DOUBLE)? & ("weight of interface realization" "=" weightInterface=DOUBLE)? &
		//("weight of enum instantiation" "=" weightEnum=DOUBLE)? & ("alpha = " alpha=DOUBLE)?)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }

		//"fine-tune" ("weight of generalization" "=" weightGeneralization=DOUBLE)?
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"fine-tune"
		public Keyword getFineTuneKeyword_5_0_0() { return cFineTuneKeyword_5_0_0; }

		//("weight of generalization" "=" weightGeneralization=DOUBLE)?
		public Group getGroup_5_0_1() { return cGroup_5_0_1; }

		//"weight of generalization"
		public Keyword getWeightOfGeneralizationKeyword_5_0_1_0() { return cWeightOfGeneralizationKeyword_5_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_0_1_1() { return cEqualsSignKeyword_5_0_1_1; }

		//weightGeneralization=DOUBLE
		public Assignment getWeightGeneralizationAssignment_5_0_1_2() { return cWeightGeneralizationAssignment_5_0_1_2; }

		//DOUBLE
		public RuleCall getWeightGeneralizationDOUBLETerminalRuleCall_5_0_1_2_0() { return cWeightGeneralizationDOUBLETerminalRuleCall_5_0_1_2_0; }

		//("weight of aggregation" "=" weightAggregation=DOUBLE)?
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"weight of aggregation"
		public Keyword getWeightOfAggregationKeyword_5_1_0() { return cWeightOfAggregationKeyword_5_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1_1() { return cEqualsSignKeyword_5_1_1; }

		//weightAggregation=DOUBLE
		public Assignment getWeightAggregationAssignment_5_1_2() { return cWeightAggregationAssignment_5_1_2; }

		//DOUBLE
		public RuleCall getWeightAggregationDOUBLETerminalRuleCall_5_1_2_0() { return cWeightAggregationDOUBLETerminalRuleCall_5_1_2_0; }

		//("weight of association" "=" weightAssociation=DOUBLE)?
		public Group getGroup_5_2() { return cGroup_5_2; }

		//"weight of association"
		public Keyword getWeightOfAssociationKeyword_5_2_0() { return cWeightOfAssociationKeyword_5_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_2_1() { return cEqualsSignKeyword_5_2_1; }

		//weightAssociation=DOUBLE
		public Assignment getWeightAssociationAssignment_5_2_2() { return cWeightAssociationAssignment_5_2_2; }

		//DOUBLE
		public RuleCall getWeightAssociationDOUBLETerminalRuleCall_5_2_2_0() { return cWeightAssociationDOUBLETerminalRuleCall_5_2_2_0; }

		//("weight of containment" "=" weightContainment=DOUBLE)?
		public Group getGroup_5_3() { return cGroup_5_3; }

		//"weight of containment"
		public Keyword getWeightOfContainmentKeyword_5_3_0() { return cWeightOfContainmentKeyword_5_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_3_1() { return cEqualsSignKeyword_5_3_1; }

		//weightContainment=DOUBLE
		public Assignment getWeightContainmentAssignment_5_3_2() { return cWeightContainmentAssignment_5_3_2; }

		//DOUBLE
		public RuleCall getWeightContainmentDOUBLETerminalRuleCall_5_3_2_0() { return cWeightContainmentDOUBLETerminalRuleCall_5_3_2_0; }

		//("weight of interface realization" "=" weightInterface=DOUBLE)?
		public Group getGroup_5_4() { return cGroup_5_4; }

		//"weight of interface realization"
		public Keyword getWeightOfInterfaceRealizationKeyword_5_4_0() { return cWeightOfInterfaceRealizationKeyword_5_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_4_1() { return cEqualsSignKeyword_5_4_1; }

		//weightInterface=DOUBLE
		public Assignment getWeightInterfaceAssignment_5_4_2() { return cWeightInterfaceAssignment_5_4_2; }

		//DOUBLE
		public RuleCall getWeightInterfaceDOUBLETerminalRuleCall_5_4_2_0() { return cWeightInterfaceDOUBLETerminalRuleCall_5_4_2_0; }

		//("weight of enum instantiation" "=" weightEnum=DOUBLE)?
		public Group getGroup_5_5() { return cGroup_5_5; }

		//"weight of enum instantiation"
		public Keyword getWeightOfEnumInstantiationKeyword_5_5_0() { return cWeightOfEnumInstantiationKeyword_5_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_5_1() { return cEqualsSignKeyword_5_5_1; }

		//weightEnum=DOUBLE
		public Assignment getWeightEnumAssignment_5_5_2() { return cWeightEnumAssignment_5_5_2; }

		//DOUBLE
		public RuleCall getWeightEnumDOUBLETerminalRuleCall_5_5_2_0() { return cWeightEnumDOUBLETerminalRuleCall_5_5_2_0; }

		//("alpha = " alpha=DOUBLE)?
		public Group getGroup_5_6() { return cGroup_5_6; }

		//"alpha = "
		public Keyword getAlphaKeyword_5_6_0() { return cAlphaKeyword_5_6_0; }

		//alpha=DOUBLE
		public Assignment getAlphaAssignment_5_6_1() { return cAlphaAssignment_5_6_1; }

		//DOUBLE
		public RuleCall getAlphaDOUBLETerminalRuleCall_5_6_1_0() { return cAlphaDOUBLETerminalRuleCall_5_6_1_0; }
	}

	public class SubModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SubModel:
		//	"sub-model" name=ID "{" description=STRING "}";
		public ParserRule getRule() { return rule; }

		//"sub-model" name=ID "{" description=STRING "}"
		public Group getGroup() { return cGroup; }

		//"sub-model"
		public Keyword getSubModelKeyword_0() { return cSubModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//description=STRING
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0() { return cDescriptionSTRINGTerminalRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private SplittingDescriptionElements pSplittingDescription;
	private SubModelElements pSubModel;
	private TerminalRule tDOUBLE;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public SplittingDescriptionGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.uni_marburg.splittr.description.SplittingDescription".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////	public double ANALYSIS_ALPHA = 0.86;
	////	
	////	public double WEIGHT_GENERALIZATION = 10.0;
	////	
	////	public double WEIGHT_COMPOSITION = 6.0;
	////
	////	public double WEIGHT_AGGREGATION = 3.0;
	////
	////	public double WEIGHT_ASSOCIATION = 1.0;
	////	
	////	public double WEIGHT_INTERFACE_REALIZATION = 3.0;
	//SplittingDescription:
	//	"split model" modelLocation=STRING ("partially with threshold" threshold=DOUBLE)? "into" submodels+=SubModel*
	//	("fine-tune" ("weight of generalization" "=" weightGeneralization=DOUBLE)? & ("weight of aggregation" "="
	//	weightAggregation=DOUBLE)? & ("weight of association" "=" weightAssociation=DOUBLE)? & ("weight of containment" "="
	//	weightContainment=DOUBLE)? & ("weight of interface realization" "=" weightInterface=DOUBLE)? &
	//	("weight of enum instantiation" "=" weightEnum=DOUBLE)? & ("alpha = " alpha=DOUBLE)?)?;
	public SplittingDescriptionElements getSplittingDescriptionAccess() {
		return (pSplittingDescription != null) ? pSplittingDescription : (pSplittingDescription = new SplittingDescriptionElements());
	}
	
	public ParserRule getSplittingDescriptionRule() {
		return getSplittingDescriptionAccess().getRule();
	}

	//SubModel:
	//	"sub-model" name=ID "{" description=STRING "}";
	public SubModelElements getSubModelAccess() {
		return (pSubModel != null) ? pSubModel : (pSubModel = new SubModelElements());
	}
	
	public ParserRule getSubModelRule() {
		return getSubModelAccess().getRule();
	}

	//terminal DOUBLE returns ecore::EDouble:
	//	INT "." INT;
	public TerminalRule getDOUBLERule() {
		return (tDOUBLE != null) ? tDOUBLE : (tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOUBLE"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
