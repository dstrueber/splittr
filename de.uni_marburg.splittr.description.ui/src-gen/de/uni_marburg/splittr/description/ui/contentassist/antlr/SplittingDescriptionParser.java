/*
* generated by Xtext
*/
package de.uni_marburg.splittr.description.ui.contentassist.antlr;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.uni_marburg.splittr.description.services.SplittingDescriptionGrammarAccess;

public class SplittingDescriptionParser extends AbstractContentAssistParser {
	
	@Inject
	private SplittingDescriptionGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.uni_marburg.splittr.description.ui.contentassist.antlr.internal.InternalSplittingDescriptionParser createParser() {
		de.uni_marburg.splittr.description.ui.contentassist.antlr.internal.InternalSplittingDescriptionParser result = new de.uni_marburg.splittr.description.ui.contentassist.antlr.internal.InternalSplittingDescriptionParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSplittingDescriptionAccess().getGroup(), "rule__SplittingDescription__Group__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_2(), "rule__SplittingDescription__Group_2__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_0(), "rule__SplittingDescription__Group_5_0__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_0_1(), "rule__SplittingDescription__Group_5_0_1__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_1(), "rule__SplittingDescription__Group_5_1__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_2(), "rule__SplittingDescription__Group_5_2__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_3(), "rule__SplittingDescription__Group_5_3__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_4(), "rule__SplittingDescription__Group_5_4__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_5(), "rule__SplittingDescription__Group_5_5__0");
					put(grammarAccess.getSplittingDescriptionAccess().getGroup_5_6(), "rule__SplittingDescription__Group_5_6__0");
					put(grammarAccess.getSubModelAccess().getGroup(), "rule__SubModel__Group__0");
					put(grammarAccess.getSplittingDescriptionAccess().getModelLocationAssignment_1(), "rule__SplittingDescription__ModelLocationAssignment_1");
					put(grammarAccess.getSplittingDescriptionAccess().getThresholdAssignment_2_1(), "rule__SplittingDescription__ThresholdAssignment_2_1");
					put(grammarAccess.getSplittingDescriptionAccess().getSubmodelsAssignment_4(), "rule__SplittingDescription__SubmodelsAssignment_4");
					put(grammarAccess.getSplittingDescriptionAccess().getWeightGeneralizationAssignment_5_0_1_2(), "rule__SplittingDescription__WeightGeneralizationAssignment_5_0_1_2");
					put(grammarAccess.getSplittingDescriptionAccess().getWeightAggregationAssignment_5_1_2(), "rule__SplittingDescription__WeightAggregationAssignment_5_1_2");
					put(grammarAccess.getSplittingDescriptionAccess().getWeightAssociationAssignment_5_2_2(), "rule__SplittingDescription__WeightAssociationAssignment_5_2_2");
					put(grammarAccess.getSplittingDescriptionAccess().getWeightContainmentAssignment_5_3_2(), "rule__SplittingDescription__WeightContainmentAssignment_5_3_2");
					put(grammarAccess.getSplittingDescriptionAccess().getWeightInterfaceAssignment_5_4_2(), "rule__SplittingDescription__WeightInterfaceAssignment_5_4_2");
					put(grammarAccess.getSplittingDescriptionAccess().getWeightEnumAssignment_5_5_2(), "rule__SplittingDescription__WeightEnumAssignment_5_5_2");
					put(grammarAccess.getSplittingDescriptionAccess().getAlphaAssignment_5_6_1(), "rule__SplittingDescription__AlphaAssignment_5_6_1");
					put(grammarAccess.getSubModelAccess().getNameAssignment_1(), "rule__SubModel__NameAssignment_1");
					put(grammarAccess.getSubModelAccess().getDescriptionAssignment_3(), "rule__SubModel__DescriptionAssignment_3");
					put(grammarAccess.getSplittingDescriptionAccess().getUnorderedGroup_5(), "rule__SplittingDescription__UnorderedGroup_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.uni_marburg.splittr.description.ui.contentassist.antlr.internal.InternalSplittingDescriptionParser typedParser = (de.uni_marburg.splittr.description.ui.contentassist.antlr.internal.InternalSplittingDescriptionParser) parser;
			typedParser.entryRuleSplittingDescription();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SplittingDescriptionGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SplittingDescriptionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
